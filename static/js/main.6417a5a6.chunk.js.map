{"version":3,"sources":["components/player.jsx","components/song.jsx","data.js","components/librarySong.jsx","components/library.jsx","components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["Player","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","currentSong","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","SkipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","getTime","time","Math","floor","slice","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","chillHop","audio","uuidv4","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","songHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6417a5a6.chunk.js","sourcesContent":["//plays pause music\r\n\r\nimport React, {useEffect} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleLeft, faAngleRight, faPause, faPlay} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {playAudio} from \"../utlis/utlis\";\r\n\r\n\r\nconst Player = ({\r\n                    isPlaying,\r\n                    setIsPlaying,\r\n                    audioRef,\r\n                    setSongInfo,\r\n                    songInfo,\r\n                    songs,\r\n                    currentSong,\r\n                    setCurrentSong,\r\n                    setSongs\r\n                }) => {\r\n    //region playSongHandler\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause(); // if music playing lcikcing on pause will pause ot\r\n            setIsPlaying(!isPlaying) // change it up on or off. if it was false it will be true.\r\n        } else {\r\n            audioRef.current.play(); // if its paused it will play it.\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    }\r\n    //endregion\r\n\r\n    useEffect(() => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === currentSong.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSongs)\r\n    }, [currentSong])\r\n\r\n    const SkipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex(song => song.id === currentSong.id)\r\n        if (direction === 'skip-forward') {\r\n          await  setCurrentSong(songs[(currentIndex + 1) % songs.length])\r\n        }\r\n        if (direction === 'skip-back') {\r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n            await    setCurrentSong(songs[songs.length - 1])\r\n                if(isPlaying) audioRef.current.play();\r\n                return; // returns it so the code does not break;\r\n\r\n            }\r\n         await   setCurrentSong(songs[(currentIndex - 1) % songs.length])\r\n        }\r\n        if(isPlaying) audioRef.current.play();\r\n\r\n    }\r\n\r\n\r\n    const dragHandler = e => {\r\n        audioRef.current.currentTime = e.target.value; //sets the current audio value. so it updates when the cursor moves.\r\n        setSongInfo({...songInfo, currentTime: e.target.currentTime});\r\n    }\r\n\r\n    //endregion\r\n    const getTime = (time) => `${Math.floor(time / 60)}:${(`0${Math.floor(time & 60)}`).slice(-2)}`\r\n\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n    return (\r\n        <div className='player'>\r\n            <div className=\"time-control\">\r\n                <p>  {getTime(songInfo.currentTime)}</p>\r\n                <div style={{background: `linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]}`}}\r\n                     className=\"track\">\r\n                    <input min={0} max={songInfo.duration || 0} value={songInfo.currentTime} onChange={dragHandler}\r\n                           type=\"Range\"/>\r\n                    <div style={trackAnim} className=\"animate-track\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className='play-control'>\r\n                <FontAwesomeIcon\r\n                    onClick={() => SkipTrackHandler('skip-back')}\r\n                    className='skip-back'\r\n                    size='2x'\r\n                    icon={faAngleLeft}/>\r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler}\r\n                    className='play'\r\n                    size='2x'\r\n                    icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon\r\n                    className='skip-forward'\r\n                    size='2x'\r\n                    icon={faAngleRight}\r\n                    onClick={() => SkipTrackHandler('skip-forward')}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","//shows song name artist and pictures\r\n\r\nimport React from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n    return (\r\n        <div className='song-container'>\r\n            <img src={currentSong.cover} alt={currentSong.name}/>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;\r\n","import {v4 as uuidv4} from \"uuid\";\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Beaver Creek\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Daylight\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Keep Going\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Nightfall\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Reflection\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Under the City Stars\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Under the City Stars\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        //ADD MORE HERE\r\n    ];\r\n}\r\n\r\nexport default chillHop;","import React from 'react';\r\nimport {playAudio} from \"../utlis/utlis\";\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\r\n    const songSelectHandler = async () => {\r\n        const selectedSong = songs.filter(state => state.id === id)\r\n\r\n     await   setCurrentSong(selectedSong[0]); // returns 0 so used selected Song.\r\n\r\n        //addactive State\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id) {\r\n                return {\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSongs)\r\n        if(isPlaying) audioRef.current.play();\r\n        //\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n            <img src={song.cover} alt={song.cover}/>\r\n            <div className=\"song-description\">\r\n\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from 'react';\r\nimport LibrarySong from \"./librarySong\";\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library' : \"\"} `}>\r\n\r\n\r\n            {songs.map(song => <LibrarySong songs={songs}\r\n                                            setCurrentSong={setCurrentSong}\r\n                                            song={song}\r\n                                            key={song.id}\r\n                                            id={song.id}\r\n                                            audioRef={audioRef}\r\n                                            isPlaying={isPlaying}\r\n                                            setSongs={setSongs}\r\n\r\n            />)\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons/faMusic\";\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n\r\n    return (\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic}/>\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import './styles/App.scss'\nimport Player from \"./components/player\";\nimport Song from \"./components/song\";\nimport data from './data'\nimport React, {useRef, useState} from \"react\";\nimport Library from \"./components/library\";\nimport Nav from \"./components/Nav\";\n\nconst App = () => {\n    const audioRef = useRef(null);\n    const [songs, setSongs] = useState(data())\n    const [currentSong, setCurrentSong] = useState(songs[0])\n    const [isPlaying, setIsPlaying] = useState(false);\n    //region songInfo --> set the songInfo\n    const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0,\n        animationPercentage: 0,\n    })\n    //endregion\n    const [libraryStatus, setLibraryStatus] = useState(false);\n\n    const timeUpdateHandler = (e) => {\n\n        const current = e.target.currentTime; // displays what length current song is playing\n        const duration = e.target.duration; // displays how long the song is.\n        const roundedCurrent = Math.round(current)\n        const roundedDuration = Math.round(duration)\n        const animationPercentage = Math.round((roundedCurrent / roundedDuration) * 100)\n        setSongInfo({\n            ...songInfo, // copy the current song info\n            currentTime: current,  // set the current time\n            duration,\n            animationPercentage\n        })\n    };\n\n\n    const songHandler = async () => {\n        let currentIndex = songs.findIndex(song => song.id === currentSong.id)\n\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n        if(isPlaying) audioRef.current.play();\n    };\n\n    return (\n\n        <div className={`App ${libraryStatus?'library-active':\"\"}`}>\n            <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n\n            <Song currentSong={currentSong}/>\n            <Player\n                audioRef={audioRef}\n                setIsPlaying={setIsPlaying} // this will be whther setisPlaying\n                isPlaying={isPlaying} // this will be whether isPlaying current song.\n                currentSong={currentSong} // passes current song\n                setSongInfo={setSongInfo}\n                songInfo={songInfo}\n                songs={songs}\n                setCurrentSong={setCurrentSong}\n                setSongs={setSongs}\n            />\n            <Library audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong} isPlaying={isPlaying}\n                     setSongs={setSongs} libraryStatus={libraryStatus}/>\n            <audio\n\n                onLoadedMetadata={timeUpdateHandler}\n                onTimeUpdate={timeUpdateHandler}\n                ref={audioRef} src={currentSong.audio}\n                onEnded={songHandler}\n\n            />\n        </div>\n\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}